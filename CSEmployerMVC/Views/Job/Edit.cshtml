@model CSEmployerMVC.Models.Job

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Job</legend>

        @Html.HiddenFor(model => model.ID)
       @Html.HiddenFor(model => model.DatePosted)

        <div class="editor-label">
            @Html.LabelFor(model => model.JobTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.JobTitle)
            @Html.ValidationMessageFor(model => model.JobTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Department)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Department)
            @Html.ValidationMessageFor(model => model.Department)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PositionType)
        </div>
        <div class="editor-field">
            @Html.DropDownList("PositionType", String.Empty)
            @Html.ValidationMessageFor(model => model.PositionType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HoursPerWeek)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HoursPerWeek)
            @Html.ValidationMessageFor(model => model.HoursPerWeek)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Recruiter)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Recruiter)
            @Html.ValidationMessageFor(model => model.Recruiter)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.Salary)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Salary)
            @Html.ValidationMessageFor(model => model.Salary)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PayRate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PayRate) <p class="small">Current: @Html.DisplayFor(model => model.PayRate)</p>
            @Html.ValidationMessageFor(model => model.PayRate)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.reqDegree)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.reqDegree)  <p class="small">Current: @Html.DisplayFor(model => model.reqDegree)</p>
            @Html.ValidationMessageFor(model => model.reqDegree)
        </div>

         <div class="editor-label">
            @Html.LabelFor(model => model.reqYearsExp)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.reqYearsExp) 
            @Html.ValidationMessageFor(model => model.reqYearsExp)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.reqPGLanguages) 
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.reqPGLanguages)
            @Html.ValidationMessageFor(model => model.reqPGLanguages)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EmployerID, "Employer")
        </div>
        <div class="editor-field">
            @Html.DropDownList("EmployerID", String.Empty)
            @Html.ValidationMessageFor(model => model.EmployerID)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
