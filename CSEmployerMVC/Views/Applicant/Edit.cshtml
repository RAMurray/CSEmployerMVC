@model CSEmployerMVC.Models.Applicant

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Applicant", FormMethod.Post, new { enctype = "multipart/form-data" })) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Applicant</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.FName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FName)
            @Html.ValidationMessageFor(model => model.FName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LName)
            @Html.ValidationMessageFor(model => model.LName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DOB)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DOB)
            @Html.ValidationMessageFor(model => model.DOB)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.City)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.State)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.State)
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.JobTitle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.JobTitle)
            @Html.ValidationMessageFor(model => model.JobTitle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Degree)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Degree)
            @Html.ValidationMessageFor(model => model.Degree)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.YearsExp)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.YearsExp)
            @Html.ValidationMessageFor(model => model.YearsExp)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Languages)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Languages)
            @Html.ValidationMessageFor(model => model.Languages)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.File)
        </div>
        <div class="editor-field">
            @* 
               The input name 'Resume' is significant. When the controller is called it looks for the
               lower case version of this word 'resume'.
            *@
            <input type="file" name="Resume" />
            @Html.ValidationMessageFor(model => model.File)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    <button type="button" class="btn btn-warning" title="Admin" value="D" onclick="location.href='@Url.Action("Index", "Applicant")'">Back to List</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
